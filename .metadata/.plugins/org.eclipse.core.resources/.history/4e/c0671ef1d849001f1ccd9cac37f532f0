package BambuiMovie;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Aplicacao {
    public static void main(String[] args) {
        Cinema cinema = new Cinema("CineMax");
        List<Cliente> clientes = new ArrayList<>();
        List<Ingresso> ingressosVendidos = new ArrayList<>();

        // Adicionando filmes
        Filme filme1 = new Filme("Inception", "Ficção Científica", 148);
        Filme filme2 = new Filme("Toy Story", "Animação", 81);

        cinema.adicionarFilme(filme1);
        cinema.adicionarFilme(filme2);

        // Adicionando sessões
        Sessao sessao1 = new Sessao(filme1, LocalDateTime.of(2024, 6, 10, 19, 0), 100);
        Sessao sessao2 = new Sessao(filme2, LocalDateTime.of(2024, 6, 10, 15, 0), 50);

        cinema.adicionarSessao(sessao1);
        cinema.adicionarSessao(sessao2);

        // Adicionando consumíveis
        Consumivel pipoca = new Consumivel("Pipoca", 10.0);
        Consumivel refrigerante = new Consumivel("Refrigerante", 5.0);

        cinema.adicionarConsumivel(pipoca);
        cinema.adicionarConsumivel(refrigerante);

        Scanner scanner = new Scanner(System.in);

        int opcao;
        do {
            System.out.println("Selecione a opção desejada:");
            System.out.println("1 - Ver filmes em cartaz");
            System.out.println("2 - Comprar ingresso");
            System.out.println("3 - Ver consumíveis à venda");
            System.out.println("4 - Mostrar clientes");
            System.out.println("5 - Relatório de vendas por período (antes ou depois das 17 horas)");
            System.out.println("6 - Fila de clientes");
            System.out.println("7 - Mostrar horas de venda na árvore");
            System.out.println("0 - Finalizar programa");

            opcao = scanner.nextInt();
            scanner.nextLine(); // Consumir nova linha

            switch (opcao) {
                case 1:
                    verFilmesEmCartaz(cinema);
                    break;
                case 2:
                    comprarIngresso(cinema, clientes, ingressosVendidos, scanner);
                    break;
                case 3:
                    verConsumiveis(cinema);
                    break;
                case 4:
                    mostrarClientes(clientes);
                    break;
                case 5:
                    relatorioVendasPorPeriodo(ingressosVendidos);
                    break;
                case 6:
                    mostrarFilaClientes(clientes);
                    break;
                case 7:
                    mostrarHorasVenda(ingressosVendidos);
                    break;
                case 0:
                    System.out.println("Finalizando programa...");
                    break;
                default:
                    System.out.println("Opção inválida! Tente novamente.");
            }
        } while (opcao != 0);

        scanner.close();
    }

    public static void verFilmesEmCartaz(Cinema cinema) {
        System.out.println("Filmes em cartaz:");
        for (Filme filme : cinema.getFilmes()) {
            System.out.println(filme.getTitulo() + " - " + filme.getGenero() + " - " + filme.getDuracao() + " minutos");
        }
    }


    public static void comprarIngresso(Cinema cinema, List<Cliente> clientes, List<Ingresso> ingressosVendidos, Scanner scanner) {
        System.out.println("Digite seu nome:");
        String nome = scanner.nextLine();
        System.out.println("Digite sua idade:");
        int idade = scanner.nextInt();
        scanner.nextLine(); // Consumir nova linha

        Cliente cliente = new Cliente(nome, idade);
        clientes.add(cliente);

        System.out.println("Escolha uma sessão para comprar ingresso:");
        for (int i = 0; i < cinema.getSessoes().size(); i++) {
            Sessao sessao = cinema.getSessoes().get(i);
            System.out.println((i + 1) + ": " + sessao.getFilme().getTitulo() + " às " + sessao.getHorario());
        }

        int escolhaSessao = scanner.nextInt();
        Sessao sessaoEscolhida = cinema.getSessoes().get(escolhaSessao - 1);

        System.out.println("Quantos ingressos deseja comprar?");
        int quantidadeIngressos = scanner.nextInt();

        double precoIngresso = 20.0; // Preço base do ingresso
        double total = 0;
        List<Consumivel> consumiveisComprados = new ArrayList<>(); // Lista para armazenar consumíveis comprados

        for (int i = 0; i < quantidadeIngressos; i++) {
            boolean meiaEntrada = idade < 18;
            Ingresso ingresso = new Ingresso(sessaoEscolhida, precoIngresso, meiaEntrada, consumiveisComprados); // Passar a lista de consumíveis
            if (sessaoEscolhida.venderIngresso()) {
                ingressosVendidos.add(ingresso);
                total += ingresso.getPreco();
                System.out.println("Ingresso comprado para a sessão: " + sessaoEscolhida.getFilme().getTitulo());
            } else {
                System.out.println("Ingressos esgotados para a sessão: " + sessaoEscolhida.getFilme().getTitulo());
                break;
            }
        }

        System.out.println("Deseja comprar consumíveis? (sim/nao)");
        String respostaConsumiveis = scanner.next();
        if (respostaConsumiveis.equalsIgnoreCase("sim")) {
            System.out.println("Consumíveis disponíveis:");
            for (int i = 0; i < cinema.getConsumiveis().size(); i++) {
                Consumivel consumivel = cinema.getConsumiveis().get(i);
                System.out.println((i + 1) + ": " + consumivel.getNome() + " - R$" + consumivel.getPreco());
            }

            System.out.println("Escolha o número do consumível que deseja comprar (digite 0 para sair):");
            while (true) {
                int escolhaConsumivel = scanner.nextInt();
                if (escolhaConsumivel == 0) {
                    break;
                }
                Consumivel consumivelEscolhido = cinema.getConsumiveis().get(escolhaConsumivel - 1);
                total += consumivelEscolhido.getPreco();
                consumiveisComprados.add(consumivelEscolhido); // Adicionar consumível à lista
                System.out.println("Adicionado " + consumivelEscolhido.getNome() + " - R$" + consumivelEscolhido.getPreco());
            }
        }

        System.out.println("Total da compra: R$" + total);
    }

   
    public static void verConsumiveis(Cinema cinema) {
        System.out.println("Consumíveis à venda:");
        for (Consumivel consumivel : cinema.getConsumiveis()) {
            System.out.println(consumivel.getNome() + " - R$" + consumivel.getPreco());
        }
    }

    public static void mostrarClientes(List<Cliente> clientes) {
        System.out.println("Clientes:");
        for (Cliente cliente : clientes) {
            System.out.println(cliente.getNome() + " - Idade: " + cliente.getIdade());
        }
    }

    public static void relatorioVendasPorPeriodo(List<Ingresso> ingressosVendidos) {
        System.out.println("Relatório de vendas:");
        double totalAntes17 = 0;
        double totalDepois17 = 0;

        for (Ingresso ingresso : ingressosVendidos) {
            if (ingresso.getSessao().getHorario().getHour() < 17) {
                totalAntes17 += ingresso.getPreco();
            } else {
                totalDepois17 += ingresso.getPreco();
            }
        }

        System.out.println("Total de vendas antes das 17 horas: R$" + totalAntes17);
        System.out.println("Total de vendas depois das 17 horas: R$" + totalDepois17);
    }

    public static void mostrarFilaClientes(List<Cliente> clientes) {
        System.out.println("Fila de clientes:");
        for (int i = 0; i < clientes.size(); i++) {
            Cliente cliente = clientes.get(i);
            System.out.println((i + 1) + ": " + cliente.getNome() + " - Idade: " + cliente.getIdade());
        }
    }

    public static void mostrarHorasVenda(List<Ingresso> ingressosVendidos) {
        System.out.println("Horas de venda dos ingressos:");
        for (Ingresso ingresso : ingressosVendidos) {
            System.out.println("Ingresso para " + ingresso.getSessao().getFilme().getTitulo() + " vendido às " + ingresso.getSessao().getHorario());
        }
    }
}

